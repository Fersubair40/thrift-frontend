[{"/Users/temilayosubair/Downloads/thrift-frontend/src/pages/Home.js":"1","/Users/temilayosubair/Downloads/thrift-frontend/src/reportWebVitals.js":"2","/Users/temilayosubair/Downloads/thrift-frontend/src/config/index.js":"3","/Users/temilayosubair/Downloads/thrift-frontend/src/variables/api.js":"4","/Users/temilayosubair/Downloads/thrift-frontend/src/App.js":"5","/Users/temilayosubair/Downloads/thrift-frontend/src/pages/Register.js":"6","/Users/temilayosubair/Downloads/thrift-frontend/src/pages/UserDetails.js":"7"},{"size":3389,"mtime":1609677936349,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607852872289,"results":"10","hashOfConfig":"9"},{"size":138,"mtime":1609683051496,"results":"11","hashOfConfig":"9"},{"size":1782,"mtime":1609744561398,"results":"12","hashOfConfig":"9"},{"size":554,"mtime":1608234602126,"results":"13","hashOfConfig":"9"},{"size":9600,"mtime":1609683257486,"results":"14","hashOfConfig":"9"},{"size":18920,"mtime":1609747593616,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"qfrnk0",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/temilayosubair/Downloads/thrift-frontend/src/pages/Home.js",["35"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Api from \"../variables/api\";\n\nimport \"./Home.css\";\n\nexport default function Home() {\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    (async () => {\n      const response = await Api.getUsers();\n      if (response && response.status === 200) {\n        setData(response.data.users);\n        // console.log()\n      }\n    })();\n  }, []);\n\n  return (\n    <div className=\"container \">\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\n        <div className=\"container\">\n          <a className=\"navbar-brand navs\" href=\"#\">\n            ThriftWithK\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav  mb-2 mb-lg-0 ml-auto justify-content-end\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-dark \" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link text-dark\" to=\"/register\">\n                  Create Account\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"mt-5 cards\">\n        <div className=\"row\">\n          {data && data.length >= 1 ? (\n            data.map((user) => (\n              <React.Fragment key={user.slug}>\n                <div key={user.slug} className=\"col-sm-4 mb-2\">\n                  <div\n                    className=\"card shadow-lg p-3 mb-5 rounded\"\n                    style={{ backgroundColor: \"#fff0f0\" }}\n                  >\n                    <div className=\"card-body\">\n                      <h3 className=\"card-title\">{user.Account_Balance}</h3>\n                      <h5 className=\"card-title\">{user.FullName}</h5>\n                      <h6 className=\"card-subtitle mb-2 text-dark\">\n                        Accoount Number:{\" \"}\n                        <span className=\"font-weight-bold text-dark\">\n                          {user.Account_Number}\n                        </span>\n                      </h6>\n                      <p className=\"card-text\">\n                        Package:{\" \"}\n                        <span className=\"text-dark\"> {user.package} </span>{\" \"}\n                      </p>\n                      <p className=\"card-text\">{user.Mobile_Number}</p>\n                      <Link\n                        className=\"text-black\"\n                        to={`/account/?userId=${user.slug}`}\n                      >\n                        {\" \"}\n                        View Transactions{\" \"}\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            ))\n          ) : (\n            <div className=\"container\">\n              <p>You have not Addded Anyone Yet.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n",["36","37"],"/Users/temilayosubair/Downloads/thrift-frontend/src/reportWebVitals.js",[],"/Users/temilayosubair/Downloads/thrift-frontend/src/config/index.js",[],"/Users/temilayosubair/Downloads/thrift-frontend/src/variables/api.js",[],"/Users/temilayosubair/Downloads/thrift-frontend/src/App.js",[],["38","39"],"/Users/temilayosubair/Downloads/thrift-frontend/src/pages/Register.js",["40"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Api from \"../variables/api\";\nimport splash from \"../images/splash.png\";\nimport \"./Register.css\";\n\nconst initialValues = {\n  email: \"\",\n  username: \"\",\n  fullname: \"\",\n  mobile_Number: \"\",\n  _package: \"\",\n};\n\nexport default function Register() {\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [visible, setVisible] = React.useState(true);\n  const [validationErrors, setvalidationErrors] = React.useState({});\n  const [isSubmitting, setisSubmitting] = React.useState(false);\n  const [successMessage, setsuccessMessage] = React.useState(\"\");\n\n  let history = useHistory();\n\n  const onDismiss = () => {\n    setVisible(false);\n    setvalidationErrors({});\n    setErrorMessage(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light \">\n          <div className=\"container\">\n            <a className=\"navbar-brand navs\" href=\"#\">\n              ThriftWithK\n            </a>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav  mb-2 mb-lg-0 ml-auto justify-content-end\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link text-dark \" to=\"/\">\n                    Home\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link text-dark\" to=\"/register\">\n                    Create Account\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row g-3\">\n          <div className=\"col-md-6 img .d-none .d-md-block .d-lg-none\">\n            <img className=\"splash\" src={splash} alt=\"splash\" />\n          </div>\n\n          <div className=\"col-md-6 mt-4\">\n            \n            <div className=\"form\">\n            <h3> Register </h3>\n              {successMessage && successMessage !== \"\" && (\n                <div\n                  className=\"alert alert-success\"\n                  isOpen={visible}\n                  toggle={onDismiss}\n                  role=\"alert\"\n                >\n                  {successMessage}\n                </div>\n              )}\n              {errorMessage && errorMessage !== \"\" && (\n                <div\n                  className=\"alert alert-info\"\n                  isOpen={visible}\n                  toggle={onDismiss}\n                  role=\"alert\"\n                >\n                  {errorMessage}\n                </div>\n              )}\n              {validationErrors &&\n                Object.entries(validationErrors).length >= 1 && (\n                  <div\n                    className=\"alert alert-info\"\n                    isOpen={visible}\n                    role=\"alert\"\n                  >\n                    <ul>\n                      {Object.keys(validationErrors).map((keys, index) => {\n                        return (\n                          <li key={index} className=\"text-black-50\">\n                            {validationErrors[keys]}\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                )}\n\n              <Formik\n                initialValues={initialValues}\n                validate={(values) => {\n                  const errors = {};\n                  if (!values.email) {\n                    errors.email = \"Email is required\";\n                  }\n                  if (!values.username) {\n                    errors.username = \"Username is required\";\n                  }\n                  if (!values.fullname) {\n                    errors.fullname = \"Fullname is required\";\n                  }\n                  if (!values.mobile_number) {\n                    errors.mobile_Number = \"Mobile Number is required\";\n                  }\n                  if (!values._package) {\n                    errors._package = \"You must pick a Package\";\n                  }\n                  setvalidationErrors({ ...errors });\n                  return errors;\n                }}\n                onSubmit={async (values) => {\n                  setisSubmitting(true);\n                  values = {\n                    ...values,\n                  };\n                  const response = await Api.register(values);\n                  if (response && response.status === 200) {\n                    setsuccessMessage(response.msg);\n                    history.push(\"/home\");\n                  } else {\n                    setErrorMessage(response.msg);\n                  }\n                  setisSubmitting(false);\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  setFieldValue,\n                }) => (\n                  \n                  <form className=\"row  g-3\" onSubmit={handleSubmit}>\n                    <div class=\"col-md-6\">\n                      <label for=\"inputEmail4\" className=\"form-label\">\n                        Email\n                      </label>\n                      <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label for=\"fullname\" className=\"form-label\">\n                        Fullname\n                      </label>\n                      <input\n                        type=\"name\"\n                        className=\"form-control\"\n                        name=\"fullname\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.fullname}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label for=\"username\" className=\"form-label\">\n                        Username\n                      </label>\n                      <input\n                        type=\"username\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.username}\n                      />\n                    </div>\n\n                    <div className=\"col-md-6\">\n                      <label for=\"mobile\" class=\"form-label\">\n                        Mobile Number\n                      </label>\n                      <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        name=\"mobile_number\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.mobile_number}\n                      />\n                    </div>\n                    <div className=\"col-md-6\">\n                      <label for=\"_package\" class=\"form-label\">\n                        Select Package\n                      </label>\n                      <select\n                        className=\"form-control\"\n                        id=\"_package\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values._package}\n                      >\n                        <option value=\"\">Select A Package</option>\n                        <option value=\"STANDARD\">Standard</option>\n                        <option value=\"PREMIUM\">Premium</option>\n                        <option value=\"PLATINUM\">Platinum</option>\n                        <option value=\"GOLD\">Gold</option>\n                        <option value=\"DIAMOND\">Diamond</option>\n                      </select>\n                    </div>\n                    <div class=\"col-12\">\n                      {isSubmitting ? (\n                        <button\n                          className=\"btn btn-primary\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            className=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          Loading...\n                        </button>\n                      ) : (\n                        <button type=\"submit\" className=\"btn btn-primary\">\n                          Register\n                        </button>\n                      )}\n                    </div>\n                  </form>\n                )}\n              </Formik>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n",["41","42"],"/Users/temilayosubair/Downloads/thrift-frontend/src/pages/UserDetails.js",["43","44"],{"ruleId":"45","severity":1,"message":"46","line":24,"column":11,"nodeType":"47","endLine":24,"endColumn":53},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"45","severity":1,"message":"46","line":38,"column":13,"nodeType":"47","endLine":38,"endColumn":55},{"ruleId":"48","replacedBy":"54"},{"ruleId":"50","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":16,"nodeType":"58","messageId":"59","endLine":3,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":110,"column":13,"nodeType":"47","endLine":110,"endColumn":55},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["60"],"no-negated-in-lhs",["61"],["60"],["61"],["60"],["61"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]